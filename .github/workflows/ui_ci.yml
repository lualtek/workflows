name: Continuos integration UI

on:
  workflow_call:
    inputs:
      release:
        required: false
        type: boolean
    secrets:
      RELEASE_TOKEN:
        required: false
      DISCORD_WEBHOOK:
        required: true

jobs:
  install_test_build_release:
    name: Continuos integration UI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: "https://npm.pkg.github.com"
          scope: "@lualtek"

      - run: npm i -g npm@8

      - name: Cache Dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-node-npm
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm run test

      - name: âŒ› rate search
        shell: pwsh
        run: |
          # get currently authenticated user rate limit info
          $rate = gh api rate_limit | convertfrom-json | select -expandproperty resources
          $rate = $rate.search

          # if we don't have at least 100 requests left, wait until reset
          if ($rate.remaining -lt 10) {
              $wait = ($rate.reset - (Get-Date (Get-Date).ToUniversalTime() -UFormat %s))
              echo "Rate limit remaining is $($rate.remaining), waiting for $($wait) seconds to reset"
              sleep $wait
              $rate = gh api rate_limit | convertfrom-json | select -expandproperty resources
              $rate = $rate.search
              echo "Rate limit has reset to $($rate.remaining) requests"
          }
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Create Release Pull Request or Publish to GitHub Packages
        id: changesets
        uses: changesets/action@v1
        if: inputs.release == true
        with:
          version: ./update-lock.sh
          publish: npm run release
          commit: "ci: release"
          title: "ci: release"
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          NPM_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Send a Discord notification
        if: steps.changesets.outputs.published == 'true'
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "Release UI Components"
          description: "UI components released on NPM"
