name: Continuos integration UI

on:
  workflow_call:
    inputs:
      release:
        required: false
        type: boolean
    secrets:
      RELEASE_TOKEN:
        required: false
      DISCORD_WEBHOOK:
        required: true
      LUALTEK_RELEASE_APP_ID:
        required: true
      LUALTEK_RELEASE_APP_PRIVATE_KEY:
        required: true

jobs:
  install_test_build_release:
    name: Continuos integration UI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Use Node Version ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com/
          scope: "@lualtek"
          token: ${{ secrets.NPM_TOKEN_DOWNLOAD }}

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN_DOWNLOAD }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN_DOWNLOAD }}
          HUSKY: 0

      - name: Build
        run: pnpm run build

      - name: Lint
        run: pnpm run lint

      - name: Test
        run: pnpm run test

      # Used to avoid rate limit on Changeset check on pull request using the search api
      - name: Generate token custom GithHub Token from App
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          # From ORG secrets
          app_id: ${{ secrets.LUALTEK_RELEASE_APP_ID }}
          # From ORG secrets
          private_key: ${{ secrets.LUALTEK_RELEASE_APP_PRIVATE_KEY }}

      - name: Create Release Pull Request or Publish to GitHub Packages
        id: changesets
        uses: changesets/action@v1
        if: inputs.release == true
        with:
          version: ./update-lock.sh
          publish: pnpm run release
          commit: "ci: release"
          title: "ci: release"
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          NPM_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Send a Discord notification
        if: steps.changesets.outputs.published == 'true'
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "Release UI Components"
          description: "UI components released on NPM"
