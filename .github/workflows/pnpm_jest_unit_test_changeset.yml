name: Jest unit test + Changeset

on:
  workflow_call:
    inputs:
      report:
        type: boolean
        default: true
      release:
        type: boolean
        default: false
      release_command:
        type: string
    secrets:
      NPM_TOKEN:
        required: true
      # Used to download private packages
      NPM_TOKEN_DOWNLOAD:
        required: true
      DOPPLER_TOKEN:
        required: false
      COMMIT_KEY:
        required: false
      LUALTEK_RELEASE_APP_ID:
        required: true
      LUALTEK_RELEASE_APP_PRIVATE_KEY:
        required: true

jobs:
  test_changeset:
    name: Test and check changeset
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4
        with:
          ssh-key: "${{ secrets.COMMIT_KEY }}"
      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3

      - name: Use Node Version ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com/
          scope: "@lualtek"
          token: ${{ secrets.NPM_TOKEN_DOWNLOAD }}

      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v3
        with:
          run_install: true
          version: 8
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN_DOWNLOAD }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN_DOWNLOAD }}
          HUSKY: 0

      - name: Unit tests
        run: pnpm test
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: inputs.report && (success() || failure())    # run this step even if previous step failed
        with:
          name: Jest Tests
          path: coverage/jest-*.xml
          reporter: jest-junit

      # Used to avoid rate limit on Changeset check on pull request using the search api
      - name: Generate token custom GithHub Token from App
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          # From ORG secrets
          app_id: ${{ secrets.LUALTEK_RELEASE_APP_ID }}
          # From ORG secrets
          private_key: ${{ secrets.LUALTEK_RELEASE_APP_PRIVATE_KEY }}

      - name: Create Release Pull Request or trigger release on Vercel
        id: changesets
        uses: changesets/action@v1
        if: inputs.release == true
        with:
          version: pnpm changeset version
          # Run custom release command
          publish: ${{ inputs.release_command }}
          commit: "ci: release"
          title: "ci: release"
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
