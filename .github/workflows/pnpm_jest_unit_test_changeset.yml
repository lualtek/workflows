name: Jest unit test

on:
  workflow_call:
    inputs:
      report:
        type: boolean
        default: true
      release:
        type: boolean
        default: false
      release_command:
        type: string
    secrets:
      NPM_TOKEN:
        required: false
      GH_TOKEN:
        required: false
      DOPPLER_TOKEN:
        required: false
      COMMIT_KEY:
        required: false

jobs:
  test_changeset:
    name: Test and check changeset
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: "${{ secrets.COMMIT_KEY }}"
      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v2

      - name: Use Node Version ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com/

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.4
        with:
          run_install: true
          version: 8.3
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          HUSKY: 0

      - name: Unit tests
        run: pnpm test
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: inputs.report && (success() || failure())    # run this step even if previous step failed
        with:
          name: Jest Tests
          path: coverage/jest-*.xml
          reporter: jest-junit

      - name: âŒ› rate search
        shell: pwsh
        run: |
          # get currently authenticated user rate limit info
          $rate = gh api rate_limit | convertfrom-json | select -expandproperty resources
          $rate = $rate.search
          echo $rate
          # if we don't have at least 100 requests left, wait until reset
          if ($rate.remaining -lt 10) {
              $wait = ($rate.reset - (Get-Date (Get-Date).ToUniversalTime() -UFormat %s))
              echo "Rate limit remaining is $($rate.remaining), waiting for $($wait) seconds to reset"
              sleep $wait
              $rate = gh api rate_limit | convertfrom-json | select -expandproperty resources
              $rate = $rate.search
              echo "Rate limit has reset to $($rate.remaining) requests"
          }
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Create Release Pull Request or trigger release on Vercel
        id: changesets
        uses: changesets/action@v1
        if: inputs.release == true
        with:
          version: pnpm changeset version
          # Run custom release command
          publish: ${{ inputs.release_command }}
          commit: "ci: release"
          title: "ci: release"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
