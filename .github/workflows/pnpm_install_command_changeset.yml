name: Install, run command and Changeset

on:
  workflow_call:
    inputs:
      pr_comment:
        required: false
        type: boolean
      pr_comment_title:
        required: false
        type: string
      command:
        required: true
        type: string
      release:
        type: boolean
        default: false
      release_command:
        type: string
        default: "echo 'Release command'"
    secrets:
      NPM_TOKEN:
        required: false
      DOPPLER_TOKEN:
        required: false
      COMMIT_KEY:
        required: false

jobs:
  install_changeset:
    name: Test and check changeset
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4
        with:
          ssh-key: "${{ secrets.COMMIT_KEY }}"
      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3

      - name: Use Node Version ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com/

      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v3
        with:
          run_install: true
          version: 8
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          HUSKY: 0

      - name: Run custom command
        uses: lasalefamine/gha-command@master
        id: command
        with:
          run: ${{ inputs.command }}
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}

      - name: PR Comment
        uses: actions/github-script@v7
        if: inputs.pr_comment
        env:
          out_log: ${{ steps.command.outputs.stdout }}
          title: ${{ inputs.pr_comment_title }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const CODE_BLOCK = '```';


            const output = `
            ### ${ process.env.title }
            ${ CODE_BLOCK }bash
            ${ process.env.out_log }
            ${ CODE_BLOCK }


            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      - name: Create Release Pull Request or trigger release on Vercel
        id: changesets
        uses: changesets/action@v1
        if: inputs.release == true
        with:
          version: pnpm changeset version
          publish: ${{ inputs.release_command }}
          commit: "ci: release"
          title: "ci: release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
